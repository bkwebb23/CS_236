buckets_0:=0-100
0-100:=0 1 2 3 4 5
tests_0:=PassOffCases/Lab0
buckets_1:=1-70 1-90 1-100
1-70:=1 3 4 5 6 7 noway
1-90:=1 2 3
1-100:=1 2
tests_1:=PassOffCases/Lab1
buckets_2:=2-80 2-100
2-80:=0 1 2 3 4 5 6 7
2-100:=0
tests_2:=PassOffCases/Lab2
buckets_3:=3-80 3-100
3-80:=0 1 2 3 4 7 8
3-100:=5 6 9
tests_3:=PassOffCases/Lab3
buckets_4:=4-80 4-100
4-80:=0 1 2 3 4 5 6 7
4-100:=1 2 3 5 6 7 8
tests_4:=PassOffCases/Lab4
buckets_5:=5-80 5-100
5-80:=0 1 2 3 4 5 6 7
5-100:=1 2 3 5 6 7 8
tests_5:=PassOffCases/Lab5
.SILENT: 0 1 2 3 4 5 $(buckets_1) $(buckets_2) $(buckets_3) $(buckets_4) $(buckets_5)
zero: 0
lab0: 0
lab1: 1
one: 1
lab2: 2
two: 2
lab3:3
three: 3
lab4: 4
four: 4
lab5: 5
five: 5
0: $(buckets_0)
	@rm $(tests_0)/out.txt
$(buckets_0):
	echo "Bucket $@"; \
	for number in ${$@} ; \
	do \
		echo "Running input $$number" ; \
		./lab $(tests_0)/$@/input$$number.txt > $(tests_0)/out.txt ; \
		diff -w $(tests_0)/$@/answer$$number.txt $(tests_0)/out.txt || (echo "diff failed on test $$number \n") ; \
	done \
1: $(buckets_1)
	@rm $(tests_1)/out.txt
$(buckets_1):
	echo "Bucket $@"; \
	for number in ${$@} ; \
	do \
		echo "Running input $$number" ; \
		./lab $(tests_1)/$@/input$$number.txt > $(tests_1)/out.txt ; \
		diff -w $(tests_1)/$@/answer$$number.txt $(tests_1)/out.txt || (echo "diff failed on test $$number \n") ; \
	done \
2: $(buckets_2)
	@rm $(tests_2)/out.txt
$(buckets_2):
	echo "Bucket $@"; \
	for number in ${$@} ; \
	do \
		echo "Running input $$number" ; \
		./lab $(tests_2)/$@/input$$number.txt > $(tests_2)/out.txt ; \
		diff -w $(tests_2)/$@/answer$$number.txt $(tests_2)/out.txt || (echo "diff failed on test $$number \n") ; \
	done \
3: $(buckets_3)
	@rm $(tests_3)/out.txt
$(buckets_3):
	echo "Bucket $@"; \
	for number in ${$@} ; \
	do \
		echo "Running input $$number" ; \
		./lab $(tests_3)/$@/input$$number.txt > $(tests_3)/out.txt ; \
		diff -w $(tests_3)/$@/answer$$number.txt $(tests_3)/out.txt || (echo "diff failed on test $$number \n") ; \
	done \
4: $(buckets_4)
	@rm $(tests_4)/out.txt
$(buckets_4):
	echo "Bucket $@"; \
	for number in ${$@} ; \
	do \
		echo "Running input $$number" ; \
		./lab $(tests_4)/$@/input$$number.txt > $(tests_4)/out.txt ; \
		diff -w $(tests_4)/$@/answer$$number.txt $(tests_4)/out.txt || (echo "diff failed on test $$number \n") ; \
	done \
5: $(buckets_5)
	@rm $(tests_5)/out.txt
$(buckets_5):
	echo "Bucket $@"; \
	for number in ${$@} ; \
	do \
		echo "Running input $$number" ; \
		./lab $(tests_5)/$@/input$$number.txt > $(tests_5)/out.txt ; \
		diff -w $(tests_5)/$@/answer$$number.txt $(tests_5)/out.txt || (echo "diff failed on test $$number \n") ; \
	done \
compile:
	g++ -Wall -Werror -std=c++17 -g *.cpp -o lab